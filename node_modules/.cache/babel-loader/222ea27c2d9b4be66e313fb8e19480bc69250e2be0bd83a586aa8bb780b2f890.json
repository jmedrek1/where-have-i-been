{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"map-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"map\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.saveMarkers && $options.saveMarkers(...args))\n  }, \"Save Markers\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.clearMarkers && $options.clearMarkers(...args))\n  }, \"Clear Markers\"), _createTextVNode(\"--> \")]);\n}","map":{"version":3,"names":["class","_createElementVNode","id","_createElementBlock","_hoisted_1","_hoisted_2","onClick","_cache","args","$options","saveMarkers","clearMarkers"],"sources":["/Users/jackmedrek/github/where-have-i-been/src/components/MapView.vue"],"sourcesContent":["<template>\n    <div class=\"map-container\">\n        <div id=\"map\"></div>\n        <button @click=\"saveMarkers\">Save Markers</button>\n        <button @click=\"clearMarkers\">Clear Markers</button>-->\n    </div>\n</template>\n\n<script>\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\nexport default {\n    data() {\n        return {\n            map: null,\n            markers: [],\n        };\n    },\n    mounted() {\n        this.initMap();\n        this.loadMarkers();\n    },\n    methods: {\n        initMap() {\n        this.map = L.map(\"map\").setView([37.7749, -122.4194], 4);\n        L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\").addTo(this.map);\n        },\n        clearMarkers() {\n            this.markers.forEach((marker) => {\n                this.map.removeLayer(marker); // Remove marker from the map\n            });\n            this.markers = []; // Clear the markers array\n            this.saveMarkers();\n        },\n        onMapClick(event) {\n            const latlng = event.latlng;\n            const marker = L.marker(latlng).addTo(this.map);\n            this.markers.push(marker); // Store the marker instance in the array\n            this.saveMarkers();\n        },\n        saveMarkers() {\n            const markerPositions = this.markers.map((marker) => marker.getLatLng());\n            localStorage.setItem(\"markers\", JSON.stringify(markerPositions));\n        },\n        loadMarkers() {\n            const savedMarkers = localStorage.getItem(\"markers\");\n            if (savedMarkers) {\n                const markerPositions = JSON.parse(savedMarkers);\n                markerPositions.forEach((position) => {\n                const marker = L.marker(position).addTo(this.map);\n                this.markers.push(marker);\n                });\n            }\n        },\n    },\n}\n</script>\n\n<style>\n.map-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-top: 20px;\n}\n#map {\n    width: 80%;\n    height: 600px;\n    margin-bottom: 10px;\n}\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAe;gCACtBC,mBAAA,CAAoB;EAAfC,EAAE,EAAC;AAAK;;;uBADjBC,mBAAA,CAIM,OAJNC,UAIM,GAHFC,UAAoB,EACpBJ,mBAAA,CAAkD;IAAzCK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;KAAE,cAAY,GACzCP,mBAAA,CAAoD;IAA3CK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAE,YAAA,IAAAF,QAAA,CAAAE,YAAA,IAAAH,IAAA,CAAY;KAAE,eAAa,G,iBAAS,MACxD,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}