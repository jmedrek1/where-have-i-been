{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nexport default {\n  data() {\n    return {\n      map: null,\n      markers: []\n    };\n  },\n  mounted() {\n    this.initMap();\n    this.loadMarkers();\n  },\n  methods: {\n    initMap() {\n      this.map = L.map(\"map\").setView([37.7749, -122.4194], 4);\n      L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\").addTo(this.map);\n    },\n    clearMarkers() {\n      this.markers.forEach(marker => {\n        this.map.removeLayer(marker); // Remove marker from the map\n      });\n\n      this.markers = []; // Clear the markers array\n      this.saveMarkers();\n    },\n    onMapClick(event) {\n      const latlng = event.latlng;\n      const marker = L.marker(latlng).addTo(this.map);\n      this.markers.push(marker); // Store the marker instance in the array\n      this.saveMarkers();\n    },\n    saveMarkers() {\n      const markerPositions = this.markers.map(marker => marker.getLatLng());\n      localStorage.setItem(\"markers\", JSON.stringify(markerPositions));\n    },\n    loadMarkers() {\n      const savedMarkers = localStorage.getItem(\"markers\");\n      if (savedMarkers) {\n        const markerPositions = JSON.parse(savedMarkers);\n        markerPositions.forEach(position => {\n          const marker = L.marker(position).addTo(this.map);\n          this.markers.push(marker);\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["L","data","map","markers","mounted","initMap","loadMarkers","methods","setView","tileLayer","addTo","clearMarkers","forEach","marker","removeLayer","saveMarkers","onMapClick","event","latlng","push","markerPositions","getLatLng","localStorage","setItem","JSON","stringify","savedMarkers","getItem","parse","position"],"sources":["/Users/jackmedrek/github/where-have-i-been/src/components/MapView.vue"],"sourcesContent":["<template>\n    <div class=\"map-container\">\n        <div id=\"map\"></div>\n        <button @click=\"saveMarkers\">Save Markers</button>\n        <button @click=\"clearMarkers\">Clear Markers</button>-->\n    </div>\n</template>\n\n<script>\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\nexport default {\n    data() {\n        return {\n            map: null,\n            markers: [],\n        };\n    },\n    mounted() {\n        this.initMap();\n        this.loadMarkers();\n    },\n    methods: {\n        initMap() {\n            this.map = L.map(\"map\").setView([37.7749, -122.4194], 4);\n            L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\").addTo(this.map);\n        },\n        clearMarkers() {\n            this.markers.forEach((marker) => {\n                this.map.removeLayer(marker); // Remove marker from the map\n            });\n            this.markers = []; // Clear the markers array\n            this.saveMarkers();\n        },\n        onMapClick(event) {\n            const latlng = event.latlng;\n            const marker = L.marker(latlng).addTo(this.map);\n            this.markers.push(marker); // Store the marker instance in the array\n            this.saveMarkers();\n        },\n        saveMarkers() {\n            const markerPositions = this.markers.map((marker) => marker.getLatLng());\n            localStorage.setItem(\"markers\", JSON.stringify(markerPositions));\n        },\n        loadMarkers() {\n            const savedMarkers = localStorage.getItem(\"markers\");\n            if (savedMarkers) {\n                const markerPositions = JSON.parse(savedMarkers);\n                markerPositions.forEach((position) => {\n                const marker = L.marker(position).addTo(this.map);\n                this.markers.push(marker);\n                });\n            }\n        },\n    },\n}\n</script>\n\n<style>\n.map-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-top: 20px;\n}\n#map {\n    width: 80%;\n    height: 600px;\n    margin-bottom: 10px;\n}\n</style>"],"mappings":";AASA,OAAOA,CAAA,MAAO,SAAS;AACvB,OAAO,0BAA0B;AAEjC,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,GAAG,EAAE,IAAI;MACTC,OAAO,EAAE;IACb,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,OAAO,CAAC,CAAC;IACd,IAAI,CAACC,WAAW,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACLF,OAAOA,CAAA,EAAG;MACN,IAAI,CAACH,GAAE,GAAIF,CAAC,CAACE,GAAG,CAAC,KAAK,CAAC,CAACM,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;MACxDR,CAAC,CAACS,SAAS,CAAC,oDAAoD,CAAC,CAACC,KAAK,CAAC,IAAI,CAACR,GAAG,CAAC;IACrF,CAAC;IACDS,YAAYA,CAAA,EAAG;MACX,IAAI,CAACR,OAAO,CAACS,OAAO,CAAEC,MAAM,IAAK;QAC7B,IAAI,CAACX,GAAG,CAACY,WAAW,CAACD,MAAM,CAAC,EAAE;MAClC,CAAC,CAAC;;MACF,IAAI,CAACV,OAAM,GAAI,EAAE,EAAE;MACnB,IAAI,CAACY,WAAW,CAAC,CAAC;IACtB,CAAC;IACDC,UAAUA,CAACC,KAAK,EAAE;MACd,MAAMC,MAAK,GAAID,KAAK,CAACC,MAAM;MAC3B,MAAML,MAAK,GAAIb,CAAC,CAACa,MAAM,CAACK,MAAM,CAAC,CAACR,KAAK,CAAC,IAAI,CAACR,GAAG,CAAC;MAC/C,IAAI,CAACC,OAAO,CAACgB,IAAI,CAACN,MAAM,CAAC,EAAE;MAC3B,IAAI,CAACE,WAAW,CAAC,CAAC;IACtB,CAAC;IACDA,WAAWA,CAAA,EAAG;MACV,MAAMK,eAAc,GAAI,IAAI,CAACjB,OAAO,CAACD,GAAG,CAAEW,MAAM,IAAKA,MAAM,CAACQ,SAAS,CAAC,CAAC,CAAC;MACxEC,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACL,eAAe,CAAC,CAAC;IACpE,CAAC;IACDd,WAAWA,CAAA,EAAG;MACV,MAAMoB,YAAW,GAAIJ,YAAY,CAACK,OAAO,CAAC,SAAS,CAAC;MACpD,IAAID,YAAY,EAAE;QACd,MAAMN,eAAc,GAAII,IAAI,CAACI,KAAK,CAACF,YAAY,CAAC;QAChDN,eAAe,CAACR,OAAO,CAAEiB,QAAQ,IAAK;UACtC,MAAMhB,MAAK,GAAIb,CAAC,CAACa,MAAM,CAACgB,QAAQ,CAAC,CAACnB,KAAK,CAAC,IAAI,CAACR,GAAG,CAAC;UACjD,IAAI,CAACC,OAAO,CAACgB,IAAI,CAACN,MAAM,CAAC;QACzB,CAAC,CAAC;MACN;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}