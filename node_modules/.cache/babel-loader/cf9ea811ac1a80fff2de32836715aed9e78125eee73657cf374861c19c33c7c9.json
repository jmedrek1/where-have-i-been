{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport leafletImage from \"leaflet-image\";\nconst customIcon = L.icon({\n  iconUrl: \"/marker-icon.png\",\n  iconSize: [30, 30],\n  iconAnchor: [15, 30]\n});\nexport default {\n  data() {\n    return {\n      map: null,\n      markers: []\n    };\n  },\n  mounted() {\n    this.initMap();\n    this.loadMarkers();\n  },\n  methods: {\n    initMap() {\n      this.map = L.map(\"map\").setView([38.8283, -98.5795], 4); // geographic center of the US\n      L.tileLayer(\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\").addTo(this.map);\n      this.map.on(\"click\", this.onMapClick);\n    },\n    onMapClick(event) {\n      const latlng = event.latlng;\n      const markerData = {\n        lat: latlng.lat,\n        lng: latlng.lng\n      };\n      this.markers.push(markerData); // Store marker data, not L.Marker objects\n\n      L.marker(latlng, {\n        icon: customIcon\n      }).addTo(this.map); // Add marker to map display\n    },\n\n    saveMarkers() {\n      localStorage.setItem(\"markers\", JSON.stringify(this.markers)); // saves to the broswer locally\n    },\n\n    loadMarkers() {\n      const savedMarkers = localStorage.getItem(\"markers\");\n      console.log(savedMarkers);\n      if (savedMarkers) {\n        this.markers = JSON.parse(savedMarkers);\n        this.markers.forEach(markerData => {\n          const latlng = L.latLng(markerData.lat, markerData.lng);\n          L.marker(latlng, {\n            icon: customIcon\n          }).addTo(this.map);\n        });\n      }\n    },\n    generateMapImage() {\n      leafletImage(this.map, (err, canvas) => {\n        if (err) {\n          console.error(err);\n          return;\n        }\n        // convert to image data url\n        const image = canvas.toDataURL(\"image/png\");\n        const win = window.open();\n        win.document.write(`<img src=\"${image}\" alt=\"Map Image\"/>`);\n      });\n    }\n  }\n};","map":{"version":3,"names":["L","leafletImage","customIcon","icon","iconUrl","iconSize","iconAnchor","data","map","markers","mounted","initMap","loadMarkers","methods","setView","tileLayer","addTo","on","onMapClick","event","latlng","markerData","lat","lng","push","marker","saveMarkers","localStorage","setItem","JSON","stringify","savedMarkers","getItem","console","log","parse","forEach","latLng","generateMapImage","err","canvas","error","image","toDataURL","win","window","open","document","write"],"sources":["/Users/jackmedrek/github/where-have-i-been/src/components/MapView.vue"],"sourcesContent":["<template>\n    <div class=\"map-container\">\n        <div id=\"map\"></div>\n        <div class=\"button-container\">\n            <button class=\"button\" @click=\"saveMarkers\">Save Markers</button>\n            <button class=\"button\" @click=\"generateMapImage\">Generate Map Image</button>\n        </div>\n    </div>\n</template>\n\n<script>\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport leafletImage from \"leaflet-image\";\n\nconst customIcon = L.icon({\n    iconUrl: \"/marker-icon.png\",\n    iconSize: [30, 30],\n    iconAnchor: [15, 30]\n});\n\nexport default {\n    data() {\n        return {\n            map: null,\n            markers: [],\n        };\n    },\n    mounted() {\n        this.initMap();\n        this.loadMarkers();\n    },\n    methods: {\n        initMap() {\n            this.map = L.map(\"map\").setView([38.8283, -98.5795], 4); // geographic center of the US\n            L.tileLayer(\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\").addTo(this.map);\n\n            this.map.on(\"click\", this.onMapClick);\n        },\n        onMapClick(event) {\n            const latlng = event.latlng;\n            const markerData = { lat: latlng.lat, lng: latlng.lng };\n            this.markers.push(markerData); // Store marker data, not L.Marker objects\n\n            L.marker(latlng, { icon: customIcon }).addTo(this.map); // Add marker to map display\n        },\n        saveMarkers() {\n            localStorage.setItem(\"markers\", JSON.stringify(this.markers)); // saves to the broswer locally\n        },\n        loadMarkers() {\n            const savedMarkers = localStorage.getItem(\"markers\");\n            console.log(savedMarkers);\n            if (savedMarkers) {\n                this.markers = JSON.parse(savedMarkers);\n\n                this.markers.forEach((markerData) => {\n                    const latlng = L.latLng(markerData.lat, markerData.lng);\n                    L.marker(latlng, { icon: customIcon }).addTo(this.map);\n                });\n            }\n        },\n        generateMapImage() {\n            leafletImage(this.map, (err, canvas) => {\n                if (err) {\n                    console.error(err);\n                    return;\n                }\n                // convert to image data url\n                const image = canvas.toDataURL(\"image/png\");\n                const win = window.open();\n                win.document.write(`<img src=\"${image}\" alt=\"Map Image\"/>`);\n            });\n        }\n    },\n}\n</script>\n\n<style>\n.map-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-top: 20px;\n}\n#map {\n    width: 80%;\n    height: 600px;\n    margin-bottom: 10px;\n}\n.buttons-container {\n    display: flex;\n    justify-content: center;\n}\n.button {\n    padding: 10px 20px;\n    margin: 0 10px;\n    background-color: #3498db;\n    color: #fff;\n    border: none;\n    \n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}