{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nconst customIcon = L.icon({\n  iconUrl: \"/marker-icon.png\",\n  iconSize: [30, 30],\n  iconAnchor: [15, 30]\n});\nexport default {\n  data() {\n    return {\n      map: null,\n      markers: []\n    };\n  },\n  mounted() {\n    this.initMap();\n    this.loadMarkers();\n  },\n  methods: {\n    initMap() {\n      this.map = L.map(\"map\").setView([38.8283, -98.5795], 4); // geographic center of the US\n      L.tileLayer(\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\").addTo(this.map);\n      this.map.on(\"click\", this.onMapClick);\n    },\n    onMapClick(event) {\n      const latlng = event.latlng;\n      const marker = L.marker(latlng, {\n        icon: customIcon\n      }).addTo(this.map);\n      this.markers.push(marker);\n    },\n    saveMarkers() {\n      localStorage.setItem(\"markers\", JSON.stringify(markerPositions)); // saves to the broswer locally\n    },\n\n    loadMarkers() {\n      const savedMarkers = localStorage.getItem(\"markers\");\n      if (savedMarkers) {\n        this.markers = JSON.parse(savedMarkers);\n        this.markers.forEach(markerData => {\n          const latlng = L.latLng(markerData.lat, markerData.lng);\n          L.marker(latlng, {\n            icon: customIcon\n          }).addTo(this.map);\n        });\n      }\n    },\n    clearMarkers() {\n      this.markers.forEach(marker => {\n        this.map.removeLayer(marker);\n      });\n      this.markers = [];\n      this.saveMarkers();\n    }\n  }\n};","map":{"version":3,"names":["L","customIcon","icon","iconUrl","iconSize","iconAnchor","data","map","markers","mounted","initMap","loadMarkers","methods","setView","tileLayer","addTo","on","onMapClick","event","latlng","marker","push","saveMarkers","localStorage","setItem","JSON","stringify","markerPositions","savedMarkers","getItem","parse","forEach","markerData","latLng","lat","lng","clearMarkers","removeLayer"],"sources":["/Users/jackmedrek/github/where-have-i-been/src/components/MapView.vue"],"sourcesContent":["<template>\n    <div class=\"map-container\">\n        <div id=\"map\"></div>\n        <button @click=\"saveMarkers\">Save Markers</button>\n        <button @click=\"clearMarkers\">Clear Markers</button>-->\n    </div>\n</template>\n\n<script>\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\nconst customIcon = L.icon({\n    iconUrl: \"/marker-icon.png\",\n    iconSize: [30, 30],\n    iconAnchor: [15, 30]\n});\n\nexport default {\n    data() {\n        return {\n            map: null,\n            markers: [],\n        };\n    },\n    mounted() {\n        this.initMap();\n        this.loadMarkers();\n    },\n    methods: {\n        initMap() {\n            this.map = L.map(\"map\").setView([38.8283, -98.5795], 4); // geographic center of the US\n            L.tileLayer(\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\").addTo(this.map);\n\n            this.map.on(\"click\", this.onMapClick);\n        },\n        onMapClick(event) {\n            const latlng = event.latlng;\n\n            const marker = L.marker(latlng, { icon: customIcon }).addTo(this.map);\n            this.markers.push(marker);\n        },\n        saveMarkers() {\n            localStorage.setItem(\"markers\", JSON.stringify(markerPositions)); // saves to the broswer locally\n        },\n        loadMarkers() {\n            const savedMarkers = localStorage.getItem(\"markers\");\n\n            if (savedMarkers) {\n                this.markers = JSON.parse(savedMarkers);\n\n                this.markers.forEach((markerData) => {\n                    const latlng = L.latLng(markerData.lat, markerData.lng);\n                    L.marker(latlng, { icon: customIcon }).addTo(this.map);\n                });\n            }\n        },\n        clearMarkers() {\n            this.markers.forEach((marker) => {\n                this.map.removeLayer(marker);\n            });\n            this.markers = [];\n            this.saveMarkers();\n        },\n    },\n}\n</script>\n\n<style>\n.map-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-top: 20px;\n}\n#map {\n    width: 80%;\n    height: 600px;\n    margin-bottom: 10px;\n}\n</style>"],"mappings":";AASA,OAAOA,CAAA,MAAO,SAAS;AACvB,OAAO,0BAA0B;AAEjC,MAAMC,UAAS,GAAID,CAAC,CAACE,IAAI,CAAC;EACtBC,OAAO,EAAE,kBAAkB;EAC3BC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE;AACvB,CAAC,CAAC;AAEF,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,GAAG,EAAE,IAAI;MACTC,OAAO,EAAE;IACb,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,OAAO,CAAC,CAAC;IACd,IAAI,CAACC,WAAW,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACLF,OAAOA,CAAA,EAAG;MACN,IAAI,CAACH,GAAE,GAAIP,CAAC,CAACO,GAAG,CAAC,KAAK,CAAC,CAACM,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE;MACzDb,CAAC,CAACc,SAAS,CAAC,gEAAgE,CAAC,CAACC,KAAK,CAAC,IAAI,CAACR,GAAG,CAAC;MAE7F,IAAI,CAACA,GAAG,CAACS,EAAE,CAAC,OAAO,EAAE,IAAI,CAACC,UAAU,CAAC;IACzC,CAAC;IACDA,UAAUA,CAACC,KAAK,EAAE;MACd,MAAMC,MAAK,GAAID,KAAK,CAACC,MAAM;MAE3B,MAAMC,MAAK,GAAIpB,CAAC,CAACoB,MAAM,CAACD,MAAM,EAAE;QAAEjB,IAAI,EAAED;MAAW,CAAC,CAAC,CAACc,KAAK,CAAC,IAAI,CAACR,GAAG,CAAC;MACrE,IAAI,CAACC,OAAO,CAACa,IAAI,CAACD,MAAM,CAAC;IAC7B,CAAC;IACDE,WAAWA,CAAA,EAAG;MACVC,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACC,eAAe,CAAC,CAAC,EAAE;IACtE,CAAC;;IACDhB,WAAWA,CAAA,EAAG;MACV,MAAMiB,YAAW,GAAIL,YAAY,CAACM,OAAO,CAAC,SAAS,CAAC;MAEpD,IAAID,YAAY,EAAE;QACd,IAAI,CAACpB,OAAM,GAAIiB,IAAI,CAACK,KAAK,CAACF,YAAY,CAAC;QAEvC,IAAI,CAACpB,OAAO,CAACuB,OAAO,CAAEC,UAAU,IAAK;UACjC,MAAMb,MAAK,GAAInB,CAAC,CAACiC,MAAM,CAACD,UAAU,CAACE,GAAG,EAAEF,UAAU,CAACG,GAAG,CAAC;UACvDnC,CAAC,CAACoB,MAAM,CAACD,MAAM,EAAE;YAAEjB,IAAI,EAAED;UAAW,CAAC,CAAC,CAACc,KAAK,CAAC,IAAI,CAACR,GAAG,CAAC;QAC1D,CAAC,CAAC;MACN;IACJ,CAAC;IACD6B,YAAYA,CAAA,EAAG;MACX,IAAI,CAAC5B,OAAO,CAACuB,OAAO,CAAEX,MAAM,IAAK;QAC7B,IAAI,CAACb,GAAG,CAAC8B,WAAW,CAACjB,MAAM,CAAC;MAChC,CAAC,CAAC;MACF,IAAI,CAACZ,OAAM,GAAI,EAAE;MACjB,IAAI,CAACc,WAAW,CAAC,CAAC;IACtB;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}